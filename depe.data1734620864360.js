import{Q as b,a as d,b as A}from"./q-table-column.builder1734620864360.js";import{d as w,y as O,c as E,e as L,a as I,z as R,u as m,w as h,f as D,A as N}from"./index1734620864360.js";import{p as g}from"./pagination-store.util1734620864360.js";import{f as y}from"./field.service1734620864360.js";import{D as _}from"./file.data1734620864360.js";import{D as q}from"./index17346208643602.js";const B=g("manage-file-table-store"),j=w({__name:"table-component",props:{rows:{},col:{},pagination:{},haveActions:{type:Boolean},request:{type:Function}},setup(f){const c=f,{haveActions:r,col:l,rows:s,pagination:u}=O(c),i=E(()=>{const t=new A;return l.value.forEach(({campo:a,nome:e,fun:n})=>{if(n)return t.create_column(String(a),e,!1,o=>n(o));t.create_column(String(a),e,!1)}),t.build(r.value)});return(t,a)=>{var e;return L(),I(d,{rows:(e=m(s))!=null&&e.length?m(s):[],columns:i.value.length?i.value:[],pagination:m(u),"rows-per-page-options":[5,10,15,20,25,50],flat:"",onRequest:t.request,"onUpdate:pagination":t.request},R({_:2},[m(r)?{name:"body-cell-action",fn:h(({row:n,rowIndex:o})=>[D(b,{"auto-width":""},{default:h(()=>[N(t.$slots,"default",{action:{row:n,rowIndex:o}})]),_:2},1024)]),key:"0"}:void 0]),1032,["rows","columns","pagination","onRequest","onUpdate:pagination"])}}}),Q=g("manage-batch-table-store"),V=g("manage-Line-table-store");class C extends q{async get_table_search(c){const{pagination:r,SET_TOTAL_ROWS:l,SET_PAGINATION:s,SET_LIST:u}=B();s(c);const{dataLancamento:i,situacao:t,...a}=y().values;let e=[];a&&Object.keys(a).forEach(o=>!a[o]||e.push({campo:o,valor:a[o]}));const n={valores:e,situacao:t,dataLancamento:this.formatDate(i)};return await _.get_table_search(n,r,"ARQUIVO").then(({dados:o,totalRegistros:S})=>(l(S),u(o.map(({valores:p,...T})=>p!=null&&p.length?{...T,...this.getReduceValores(p)}:{...T})),o))}async get_table_batch(c,r){const{pagination:l,SET_TOTAL_ROWS:s,SET_PAGINATION:u,SET_LIST:i}=Q();return u(c),await _.get_table_release(l,"LOTE",r).then(({dados:t,totalRegistros:a})=>(s(a),i(t.map(({valores:e,...n})=>e!=null&&e.length?{...n,...this.getReduceValores(e)}:{...n})),t))}async get_table_line(c,r){const{pagination:l,SET_TOTAL_ROWS:s,SET_PAGINATION:u,SET_LIST:i}=V();return u(c),await _.get_table_release(l,"LINHA",r).then(({dados:t,totalRegistros:a})=>(s(a),i(t.map(({valores:e,...n})=>e!=null&&e.length?{...n,...this.getReduceValores(e)}:{...n})),t))}}const x=new C;export{j as _,Q as a,V as b,x as d,B as m};
